{"version":3,"sources":["Certifications.js","App.js","index.js"],"names":["Certifications","props","state","exerciseName","exerciseType","fieldApprove","fileApprove","artilleryApprove","exerciseManager","trainerOfficerApprove","cerRes","fieldApproveOptions","handleChange","bind","handleSubmit","fetch","then","response","json","setState","console","log","catch","error","event","target","value","name","this","preventDefault","data","encodeURIComponent","exerciseBy","method","headers","body","JSON","stringify","i","className","onSubmit","htmlFor","type","onChange","id","defaultValue","hidden","map","option","key","rank","firstName","lastName","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3484ae5f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Certifications extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exerciseName: '',\r\n            //exerciseBy: '',  autofill current user from session\r\n            exerciseType: '', // options should be pull from db\r\n            fieldApprove: '', // options should be pull from db\r\n            fileApprove: '', // options should be pull from db\r\n            artilleryApprove: '', // options should be pull from db\r\n            exerciseManager: '', // options should be pull from db\r\n            trainerOfficerApprove: '', // options should be pull from db\r\n            cerRes: '',\r\n            fieldApproveOptions: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // parameters should be from current user\r\n        fetch('/api/certifications/fieldApproveOptions?userId=1234567&rank=Colonel&force=Moran')\r\n            .then(response => response.json())\r\n            .then(state => this.setState(state), () => console.log(\"here\"))\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                this.setState({ cerRes: 'Error' })\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        /*\r\n        let exerciseName = encodeURIComponent(this.state.exerciseName)\r\n        //let exerciseBy = autofill current user from session\r\n        let exerciseType = encodeURIComponent(this.state.exerciseType)\r\n        let fieldApprove = encodeURIComponent(this.state.fieldApprove)\r\n        let fileApprove = encodeURIComponent(this.state.fileApprove)\r\n        let artilleryApprove = encodeURIComponent(this.state.artilleryApprove)\r\n        let exerciseManager = encodeURIComponent(this.state.exerciseManager)\r\n        let trainerOfficerApprove = encodeURIComponent(this.state.trainerOfficerApprove)\r\n\r\n        fetch(`/api/certifications?exerciseName=${exerciseName}&exerciseType=${exerciseType}` +\r\n            `&fieldApprove=${fieldApprove}&fileApprove=${fileApprove}&artilleryApprove=${artilleryApprove}` +\r\n            `&exerciseManager=${exerciseManager}&trainerOfficerApprove=${trainerOfficerApprove}` +\r\n            `&exerciseAuthorId=1234567`)\r\n            .then(response => response.json())\r\n            .then(state => this.setState(state));\r\n        */\r\n\r\n        let data = {\r\n            exerciseName: encodeURIComponent(this.state.exerciseName),\r\n            exerciseBy: '1234567', // autofill current user from session\r\n            exerciseType: encodeURIComponent(this.state.exerciseType),\r\n            fieldApprove: encodeURIComponent(this.state.fieldApprove),\r\n            fileApprove: encodeURIComponent(this.state.fileApprove),\r\n            artilleryApprove: encodeURIComponent(this.state.artilleryApprove),\r\n            exerciseManager: encodeURIComponent(this.state.exerciseManager),\r\n            trainerOfficerApprove: encodeURIComponent(this.state.trainerOfficerApprove)\r\n        }\r\n\r\n        fetch('/api/certifications', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((state) => {\r\n                this.setState(state)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                this.setState({ cerRes: 'Error' })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let i = 0\r\n        return (\r\n            <div className=\"Certifications\">\r\n                <header className=\"Certifications-header\">\r\n                    <h1>Certifications</h1>\r\n\r\n                    <br />\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"exerciseName\">Exercise name: </label>\r\n                        <input\r\n                            name=\"exerciseName\"\r\n                            type=\"text\"\r\n                            value={this.state.exerciseName}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"exerciseType\">Exercise type: </label>\r\n                        <input\r\n                            name=\"exerciseType\"\r\n                            type=\"text\"\r\n                            value={this.state.exerciseType}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n                        <label htmlFor=\"fieldApprove\">Field approve: </label>\r\n                        <select id=\"fieldApproves\" name=\"fieldApprove\" defaultValue onChange={this.handleChange}>\r\n                            <option value=\"default\" hidden></option>\r\n                            {this.state.fieldApproveOptions.map(option =>\r\n                                <option key={i++} value={option.id}>{option.rank} {option.firstName} {option.lastName}</option>)}\r\n                        </select>\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"fileApprove\">File approve: </label>\r\n                        <input\r\n                            name=\"fileApprove\"\r\n                            type=\"text\"\r\n                            value={this.state.fileApprove}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"artilleryApprove\">Artillery approve: </label>\r\n                        <input\r\n                            name=\"artilleryApprove\"\r\n                            type=\"text\"\r\n                            value={this.state.artilleryApprove}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"exerciseManager\">Exercise manager: </label>\r\n                        <input\r\n                            name=\"exerciseManager\"\r\n                            type=\"text\"\r\n                            value={this.state.exerciseManager}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"trainerOfficerApprove\">Trainer officer approve: </label>\r\n                        <input\r\n                            name=\"trainerOfficerApprove\"\r\n                            type=\"text\"\r\n                            value={this.state.trainerOfficerApprove}\r\n                            onChange={this.handleChange} />\r\n\r\n                        <br />\r\n\r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n\r\n                    <p><strong>{this.state.cerRes}</strong></p>\r\n                    <p><strong>{this.state.fieldApprove}</strong></p>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Certifications;","import React from 'react';\r\nimport Certifications from './Certifications'\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      </header>\r\n      <Certifications />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}